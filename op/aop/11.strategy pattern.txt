interface StrategyPattern{
    void payment(double amt);
}
class CreditCard implements StrategyPattern{
    private String cardNo;
    private String AccHolder;
    CreditCard(String c,String acc){
        this.cardNo=c;
        this.AccHolder=acc;
        
    }
    public void payment(double amt){
        System.out.println("Paid $"+amt+" using credit Card ( Acc Holder Name : "+AccHolder+" )");
    }
}
class PayPal implements StrategyPattern{
    private String Email;
    PayPal(String e){
        this.Email=e;
    }
    public void payment(double amt){
        System.out.println("Paid $"+amt+" by PayPal.(Email : "+Email+" )");
    }
}
class BitCoin implements StrategyPattern{
    private String walletaddress;
    BitCoin(String e){
        this.walletaddress=e;
    }
    public void payment(double amt){
        System.out.println("Paid $"+amt+" by BitCoin.(walletaddress : "+walletaddress+" )");
    }
}

class ShopingCart{
    private double totalamount=0;
    private StrategyPattern PaymentStrategies;
    public void additem(double amt){
        totalamount+=amt;
    }
    public void setPaymentStrategies(StrategyPattern PaymentStrategies){
        this.PaymentStrategies=PaymentStrategies;
    }
    public void checkout(){
        PaymentStrategies.payment(totalamount);
        totalamount=0;
    }
}

class Main {
    public static void main(String[] args) {
       ShopingCart cart=new ShopingCart();
       cart.additem(50);
       cart.additem(120);
       cart.setPaymentStrategies(new CreditCard("2435-5643-2443","Amol Gaikwad") );
       cart.checkout();
       cart.additem(100);
       cart.additem(90);
       cart.setPaymentStrategies(new PayPal("amolgaikwad@gmail.com"));
       cart.checkout();
      
    }
}












